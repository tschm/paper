# üìÑ Demo

[![LaTeX]({{ repository }}/actions/workflows/latex.yml/badge.svg)]({{ repository }}/actions/workflows/latex.yml)
[![Created with qCradle](https://img.shields.io/badge/Created%20with-qCradle-blue?style=flat-square)](https://github.com/tschm/paper)

<!-- Add your arXiv badge here when available -->
<!-- [![arXiv](https://img.shields.io/badge/arXiv-XXXX.XXXXX-b31b1b.svg)](https://arxiv.org/abs/XXXX.XXXXX)-->

## üìã Table of Contents

- [Abstract](#-abstract)
- [Link to a companion Python package](#-link-to-a-companion-python-package)
- [Features](#-features)
- [Getting started](#-getting-started)
  - [Customize the README.md file](#-customize-the-readmemd-file)
  - [Edit the LaTeX document](#Ô∏è-edit-the-latex-document)
  - [Repository Tags and Headers](#Ô∏è-repository-tags-and-headers)
  - [Viewing Your Document](#-viewing-your-document)
  - [Installation and Setup](#Ô∏è-installation-and-setup)
- [Contributing](#-contributing)
- [License](#-license)

## üìù Abstract

This project provides a comprehensive LaTeX template for academic
papers with automated build and release processes.
It features customizable headers, environment variable integration,
GitHub Actions workflows for continuous integration, and a streamlined
development workflow using Tectonic for reliable LaTeX compilation.

## üîó Link to a companion Python package

<!-- Update this link to your actual companion package if available -->
Companion [Python package](https://github.com/tschm)

## ‚ú® Features

- **Modern LaTeX Setup**: Uses Tectonic for reliable, reproducible builds
- **Automated Workflows**: GitHub Actions for continuous integration and releases
- **Smart Headers**: Automatically includes version information in document headers
- **Customizable**: Easy to adapt for your specific academic paper needs
- **Clean Design**: Professional formatting with sensible defaults

## üöÄ Getting started

### **üìã Customize the README.md file**

Update this README with your project-specific information:

- Add your project's abstract
- Update links to your companion packages or resources
- Add any additional sections relevant to your project

### **‚úèÔ∏è Edit the LaTeX document**

The main LaTeX file is `paper/document.tex`.
Edit this file to add your content.
We use [tectonic](https://github.com/tectonic-typesetting/tectonic)
to compile LaTeX files.

#### **Required Components in document.tex**

The `document.tex` file must include the following components to work properly
with this template:

1. **Required Packages**:

   ```latex
   \usepackage{xcolor}      % For defining and using custom colors
   \usepackage{fancyhdr}    % For custom headers and footers
   \usepackage{hyperref}    % For creating hyperlinks in the document
   ```

2. **Header Configuration**:

   ```latex
   % Set the page style to fancy (from fancyhdr package)
   \pagestyle{fancy}
   \fancyhf{}  % Clear all default header and footer fields

   % Left header: Repository information from header.tex
   % This file is dynamically generated by the build system with repo/commit info
   \fancyhead[L]{%
     \parbox[t]{0.8\textwidth}{ % Create a paragraph box that takes 80% of text width
       \raggedright\ttfamily\small\textcolor{blue}{\input{header.tex}} % Left-aligned, monospace, small blue text
     }%
   }

   % Right header: Current date in blue monospace
   \fancyhead[R]{%
     \parbox[t]{0.2\textwidth}{ % Create a paragraph box that takes 20% of text width
       \raggedleft\ttfamily\small\textcolor{blue}{\today} % Right-aligned, monospace, small blue text with current date
     }%
   }
   ```

3. **Page Style Reset After Title**:

   ```latex
   % ===== Begin Document =====
   \begin{document}
   \maketitle  % Generate the title based on the metadata above

   % Reset page style after \maketitle (which overwrites the fancy style)
   \thispagestyle{fancy}  % Apply fancy style to the first page
   ```

These components ensure that the header is properly displayed
and that the `header.tex` file is correctly included.

### **üè∑Ô∏è Repository Tags and Headers**

The document can display metadata in the header, providing important context
about your document's version and status.

#### **Automated Headers**

Both in `latex.yml` and `release.yml` workflows, we create a file `header.tex`
that contains either the Git commit SHA (for regular builds)
or the release tag (for releases).
This metadata is automatically included in the document header,
making it easy to:

- Track which version of the document you're viewing
- Reference specific versions in discussions
- Maintain proper versioning for academic submissions

#### **Custom Headers**

You can also create your own custom `header.tex` file in the paper
directory to include custom text in the document header without modifying the LaTeX code.
This is useful for:

- Adding draft status indicators
- Including review information
- Noting special instructions for reviewers

#### **Empty header.tex File**

An empty `header.tex` file is required in the repository. This file is used as a placeholder
and is replaced during the build process in GitHub Actions workflows. When building locally,
this empty file ensures that the document compiles without errors if you don't provide custom header content.

### **üîç Viewing Your Document**

The title at the top of this README (marked with üìÑ)
links to the compiled document on GitHub Pages.
This provides an easy way to access a version
of your document without having to download the PDF file.

#### **Important Note on GitHub Pages Updates**

GitHub Pages are **only updated when a new tag is established**.
This means:

1. Regular commits to your repository will not automatically update the published document
2. To update the published document, you need to create a new release with a tag
3. You can create a new release by:
   - Going to the "Actions" section in your GitHub repository
   - Clicking "Build and Release"
   - Clicking on "Run workflow"
   - Entering a tag version (e.g., v1.0.0, v1.0.1)
   - Publishing the release

This workflow ensures that only properly tagged versions of your document are published,
making it easier to track which version is currently available to readers.

### **‚öôÔ∏è Installation and Setup**

#### Prerequisites

Before you begin, ensure you have:

- A Unix-like environment (Linux, macOS, or WSL on Windows)
- Git installed
- Basic familiarity with command-line operations

#### Setup

To set up the development environment:

1. **Install Tectonic**:

    ```bash
    make install
    ```

2. **Compile the document**:

    ```bash
    make compile
    ```

3. **Clean up generated files**:

   ```bash
   make clean
   ```

For more details on available commands, run:

```bash
make help
```

## ü§ù Contributing

Contributions to improve this LaTeX template are welcome! Here's how you can contribute:

1. **Fork the repository**
2. **Create a feature branch** (`git checkout -b feature/amazing-feature`)
3. **Commit your changes** (`git commit -m 'Add some amazing feature'`)
4. **Push to the branch** (`git push origin feature/amazing-feature`)
5. **Open a Pull Request**

Please make sure your code follows the existing style and includes appropriate documentation.

## üìÑ License

This project is licensed under the MIT License - see
the [LICENSE](LICENSE) file for details.

---

Created with ‚ù§Ô∏è using [qCradle](https://github.com/tschm/paper)
