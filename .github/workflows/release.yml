name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  tagging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v5

      - name: Create and Push Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "${{ github.event.inputs.tag }}" -m "Release ${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

  build-latex:
    uses: ./.github/workflows/latex.yml
    needs: [tagging]

  release-and-deploy:
    runs-on: ubuntu-latest
    needs: [build-latex]

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download compiled PDF
        uses: actions/download-artifact@v5
        with:
          path: compiled

      - name: Check files
        run: |
          ls -all
          tree

      - name: Generate index.html
        run: |
          # Extract repository name from github.repository (owner/repo)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)

          # Copy the template file to the compiled directory
          mkdir -p compiled
          cp templates/index.html compiled/index.html

          # Replace placeholders in the template
          sed -i "s|{{ repo_name }}|${REPO_NAME}|g" compiled/index.html
          sed -i "s|{{ tag }}|${{ github.event.inputs.tag }}|g" compiled/index.html
          sed -i "s|{{ github_repo }}|${{ github.repository }}|g" compiled/index.html

          # Insert PDF links into the template
          # Create a string variable for PDF links
          find compiled -type f -name "*.pdf" | sort | while read -r file; do
            rel_path=${file#compiled/}
            filename=$(basename "$file")
            printf "      <li class='hover:bg-gray-100 p-2 rounded transition-colors'><a href='%s' class='text-blue-600 hover:underline'>%s</a></li>\n" "$rel_path" "$filename"
          done > pdf_links.txt

          sed -i "/{{ PDF_LINKS }}/{
              r pdf_links.txt
              d
          }" compiled/index.html

          # Display the generated file
          cat compiled/index.html

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.3.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.tag }}
          generate_release_notes: true
          files: compiled/**/*.pdf

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: compiled

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
